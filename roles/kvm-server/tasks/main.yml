---

# NB: netcat-openbsd is required if using virt-manager GUI (requires -U option).

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - linux-image-amd64
    - linux-headers-amd64
  tags:
    - packages

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - qemu-kvm
    - virtinst
    - bridge-utils
    - netcat-openbsd
    - nvme-cli
    - parted
    - zfs-dkms
    - systemd-timesyncd
  tags:
    - packages

- name: Modprobe zfs
  shell: modprobe zfs
  tags:
    - kvm-server-zfs

- name: zfs | make sure that the module is loaded at boot
  copy:
    content: "zfs"
    dest: "/etc/modules-load.d/zfs.conf"
    owner: "root"
    group: "root"
    mode: '0644'
  tags:
    - kvm-server-zfs

- name: zfs | modprobe arc memory limit
  copy:
    content: "options zfs zfs_arc_max=1073741824"
    dest: "/etc/modprobe.d/zfs.conf"
    owner: "root"
    group: "root"
    mode: '0644'
  tags:
    - kvm-server-zfs

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - zfsutils-linux
    - zfs-zed
    - libvirt-clients
    - libvirt-daemon
    - libvirt-daemon-system

- name: zfs | make sure the hostid exists
  shell: "/usr/bin/zgenhostid"
  args:
    creates: /etc/hostid
  tags:
    - kvm-server-zfs

# OVH installs this by default on baremetal servers
- name: Make sure netplan is not installed
  apt: pkg=netplan.io state=absent

- name: Ensure that OVH defaults are absent
  file: path="/etc/systemd/network/{{Â item }}" state=absent
  with_items:
    - 50-default.network
    - 50-public-interface.link
    - pub.network
  tags:
    - kvm-server-networkd

- name: Deploy the network interfaces configuration
  template:
    src: "etc/systemd/network/{{ item }}"
    dest: "/etc/systemd/network/{{ item }}"
    owner: "root"
    group: "root"
    mode: 0644
  with_items:
    - 50-br0.netdev
    - 50-br0.network
    - 50-network-interface.network
  when: kvm_main_mac_address is defined
  tags:
    - kvm-server-networkd

- name: Create networking.service.d directory
  file: path="/etc/systemd/system/networking.service.d/" state=directory mode=0755 owner=root group=root

# File: /etc/systemd/system/networking.service.d/reduce-timeout.conf
# [Service]
# TimeoutStartSec=15
# TODO: reload systemd (systemctl daemon-reload)

- name: network | Deploy the network interfaces configuration
  template:
    src: "etc/network/interfaces"
    dest: "/etc/network/interfaces"
    owner: "root"
    group: "root"
    mode: 0644
  when: kvm_main_mac_address is defined
  tags:
    - kvm-server-networkd

- name: Enabling "systemd-timesyncd"
  systemd:
    name: systemd-timesyncd
    state: started
    enabled: true
  tags:
    - kvm-server-timesyncd

- name: Enable set-ntp for timesyncd
  command: /usr/bin/timedatectl set-ntp on
  tags:
    - kvm-server-timesyncd

# This should be the default since Debian 12 bookworm
- name: network | Enable systemd-networkd
  systemd:
    name: systemd-networkd
    enabled: yes
  when: kvm_main_mac_address is defined
  tags:
    - kvm-server-networkd

- name: kvm preseeds | Create preseed directory
  file: path="/etc/preseeds" state=directory mode=0750 owner=root group=root
  when: kvm_hosts is defined
  tags:
    - kvm-server-preseeds

- name: kvm preseeds | Create preseed hosts directories
  file: path="/etc/preseeds/{{ item }}" state=directory mode=0750 owner=root group=root
  with_items: "{{ kvm_hosts }}"
  when: kvm_hosts is defined
  tags:
    - kvm-server-preseeds

- name: Generate preseed files for VMs on this host
  template: src=etc/preseeds/host/preseed.cfg dest=/etc/preseeds/{{ item }}/preseed.cfg owner=root group=root mode=0640
  with_items: "{{ kvm_hosts }}"
  when: kvm_hosts is defined
  tags:
    - kvm-server-preseeds

- name: Generate preseed start script for VMs on this host
  template: src=etc/preseeds/host/start.sh dest=/etc/preseeds/{{ item }}/start.sh owner=root group=root mode=0755
  with_items: "{{ kvm_hosts }}"
  when: kvm_hosts is defined
  tags:
    - kvm-server-preseeds

- name: kvm sudo | Add priviledged users to sudo group
  user: name={{ item }} group="libvirt" append=yes
  with_items: "{{ root_sudoers }}"
  tags:
    - kvm-server-sudoers

- name: kvm sudo | Deployer sudoers who can restart VMs
  template: src=etc/sudoers.d/symbiotic-virsh dest=/etc/sudoers.d/symbiotic-virsh owner=root group=root mode=0640
  tags:
    - kvm-server-sudoers

- include_tasks: zxfer.yml
  when: zfs_zxfer_partitions is defined
  tags:
    - kvm-server-scripts
    - zfs-zxfer

# {{ ansible_managed }}
#
# https://grafana.com/docs/loki/latest/clients/promtail/configuration/

server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: warn

positions:
  filename: /var/lib/promtail/positions.yaml

clients:
- url: {{ promtail_push_url }}

scrape_configs:
- job_name: system
  static_configs:
  - targets:
      - localhost
    labels:
      job: varlogs
      host: {{ inventory_hostname }}
      __path__: /var/log/{auth,daemon,dpkg,fail2ban,kern,mail,sys,ufw,user}*log
  pipeline_stages:
  - match:
      selector: '{job="varlogs"} |~ ".*sshd.*Received disconnect from .* Bye Bye .preauth.*"'
      action: drop
      drop_counter_reason: promtail_noisy_error
  - match:
      selector: '{job="varlogs"} |~ ".*sshd.*Disconnected from .*preauth.*"'
      action: drop
      drop_counter_reason: promtail_noisy_error
  - match:
      selector: '{job="varlogs"} |~ ".* promtail\\[.*"'
      action: drop
      drop_counter_reason: promtail_noisy_error
- job_name: journal
  journal:
    max_age: 12h
    path: /var/log/journal
    labels:
      job: systemd-journal
      host: {{ inventory_hostname }}
  relabel_configs:
    - source_labels: ['__journal_systemd_unit']
      target_label: 'unit'
- job_name: nginx
  static_configs:
  - targets:
      - localhost
    labels:
      job: nginx
      host: {{ inventory_hostname }}
      __path__: /var/log/nginx/*log
- job_name: apache
  static_configs:
  - targets:
      - localhost
    labels:
      job: apache
      host: {{ inventory_hostname }}
      __path__: /var/log/apache2/*log
- job_name: civicrm_log
  static_configs:
  - targets:
      - localhost
    labels:
      job: civicrm_log
      host: {{ inventory_hostname }}
      __path__: /var/aegir/platforms/*/sites/*/files/civicrm/ConfigAndLog/CiviCRM.*.log
  pipeline_stages:
  - match:
      selector: '{job="civicrm_log"}'
      stages:
      - multiline:
          # Identify timestamps as first line of a multiline block. Enclose the string in single quotes.
          # Ex: 2038-01-01 23:50:12 (not matching on the TZ, less important here)
          firstline: '^\d{4}-\d{2}-\d{2}.\d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
          # Backtraces can be insane sometimes
          max_lines: 5000
      - regex:
          # Flag (?s:.*) needs to be set for regex stage to capture full traceback log in the extracted map.
          # Ex: 2023-09-21 23:48:57-0500  [error] Error message..
          expression: '^(?P<time>\d{4}-\d{2}-\d{2}.\d{1,2}:\d{2}:\d{2}.\d{4})  \[?P<level>(\w+)\] (?P<message>(?s:.*))$'
      - timestamp:
          source: time
          format: '2006-01-02 15:04:05-0700'

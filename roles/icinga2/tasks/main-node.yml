---

- apt:
    state: present
    install_recommends: no
    name: [
      'icinga2',
      # required for check_apt
      'monitoring-plugins-basic',
      # for mysql checks
      'nagios-plugins-contrib',
    ]
  tags:
    - icinga2
    - packages
  when: ansible_distribution == "Debian"

- apt:
    state: present
    install_recommends: no
    name: [
      'monitoring-plugins-systemd',
    ]
  tags:
    - icinga2
    - packages
    - icinga2-systemd
  when: ansible_distribution == "Debian"

# as of Ubuntu 18.xx, it seems closer to Debian
- apt:
    state: present
    install_recommends: no
    name: [
      'icinga2',
      # required for check_apt
      'monitoring-plugins-basic',
      # for mysql checks
      'nagios-plugins-contrib',
    ]
  tags:
    - icinga2
    - packages
  when: ansible_distribution == "Ubuntu"

- apt:
    state: present
    install_recommends: no
    # for mysql checks
    name: "nagios-plugins-contrib"
  tags:
    - icinga2-mysql

- name: Deploy icinga2 basic configuration files
  template: src="etc/icinga2/{{ item }}" dest="/etc/icinga2/{{ item }}" owner=root group=root mode=0644
  with_items:
    - constants.conf
    - icinga2.conf
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-base-configs

- file: path="{{ icinga2_cert_dir }}" state=directory owner="{{ icinga2_user }}" group="{{ icinga2_user }}" mode=0700
  tags:
    - icinga2
    - icinga2-base-configs

- name: Run icinga2 pki new-cert for our host
  shell: icinga2 pki new-cert --cn {{ inventory_hostname }} --key "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.key" --cert "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.crt"
  args:
    creates: "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.key"
  tags:
    - icinga2
    - icinga2-cert

- name: Run icinga2 pki save-cert
  shell: icinga2 pki save-cert --key "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.key" --cert "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.crt" --trustedcert "{{ icinga2_cert_dir }}/trusted-master.crt" --host {{ icinga2_main_node }}
  args:
    creates: "{{ icinga2_cert_dir }}/trusted-master.crt"
  tags:
    - icinga2
    - icinga2-cert

- name: Run icinga2 pki ticket
  shell: icinga2 pki ticket --cn {{ inventory_hostname }}
  delegate_to: "{{ icinga2_main_node }}"
  register: ticket
  tags:
    - icinga2
    - icinga2-cert

- shell: icinga2 pki request --host {{ icinga2_main_node }} --ticket {{ ticket.stdout }} --key "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.key" --cert "{{ icinga2_cert_dir }}/{{ inventory_hostname }}.crt" --trustedcert "{{ icinga2_cert_dir }}/trusted-master.crt" --ca "{{ icinga2_cert_dir }}/ca.crt"
  args:
    creates: "{{ icinga2_cert_dir }}/ca.crt"
  tags:
    - icinga2
    - icinga2-cert

- template: src=etc/icinga2/zones.conf dest=/etc/icinga2/zones.conf owner=root group=root mode=0644
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-zones
    - icinga2-custom-checks

- name: Enable the Icinga2 API
  shell: icinga2 feature enable api
  args:
    creates: /etc/icinga2/features-enabled/api.conf
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-api

- template: src=features-available/api.conf dest=/etc/icinga2/features-available/api.conf owner=root group=root mode=0644
  notify: restart icinga2

- template: src=zones.d/hostzone-for-master.conf dest=/etc/icinga2/zones.d/{{ inventory_hostname }}.conf owner=root group=root mode=0644
  delegate_to: "{{ icinga2_main_node }}"
  notify: restart icinga2
  tags:
    - icinga2
    - icinga2-cert

- name: Disable Icinga2 notifications
  shell: icinga2 feature disable notification
  args:
    removes: /etc/icinga2/features-enabled/notification.conf
  notify: restart icinga2
  tags:
    - icinga2

---
# Installs Aegir3 (http://www.aegirproject.org)
# Assumes Debian, with MariaDB, Nginx, php-fpm
# Depends on the mariadb and php role (c.f. roles/aegir/meta/main.yml)

- name: aegir | Force gathering facts for partial ansible runs
  setup:
  tags:
    - packages
    - packages-php
    - aegir-php
    - packages-php-gpg

- apt:
    name: [
      locales, # required for enabling locales, for CiviCRM native gettext
      patch, # required for drush make
      pwgen,
      curl,
      gettext,
      xauth,
      xvfb,
      libxrender1,
      ttf-mscorefonts-installer,
      fonts-dejavu-core,
      imagemagick
    ]
    state: present
    install_recommends: no
  tags:
    - packages

# For when running the SQL server on another VM
- apt:
    name: [
      pwgen
    ]
    state: present
    install_recommends: no
  delegate_to: "{{ aegir_db_host }}"
  when: aegir_db_host != "localhost"
  tags:
    - packages


# Create a aegir_root user for MariaDB (avoids issues with root's empty password)
- name: Check a password was created for the aegir_root MySQL user
  stat: path="/root/.mysql.root"
  register: aegir_root_sql_pass
  tags:
    - aegir-install

- name: Generate a aegir_root password for MySQL
  shell: pwgen 15 1 > /root/.mysql.root
  when: not aegir_root_sql_pass.stat.exists
  tags:
    - aegir-install

- name: Fetch the aegir_root password for MySQL
  command: cat /root/.mysql.root
  register: aegir_root_password
  changed_when: false
  tags:
    - aegir-install

- name: Set a fact for the mysql root password
  set_fact:
    aegir_db_password: "{{ aegir_root_password.stdout }}"
  tags:
    - aegir-install

- name: Create the aegir_root user on the local MySQL
  shell: /usr/bin/mysql -e "GRANT ALL ON *.* TO 'aegir_root'@'localhost' IDENTIFIED BY '{{ aegir_root_password.stdout }}' WITH GRANT OPTION"
  when: not aegir_root_sql_pass.stat.exists and aegir_db_host == "localhost"
  tags:
    - aegir-install

# We use the '%' wildcard instead of inventory_hostname because we should be specifying the IPv6 address
# and it is a bit too much restrictive if we do changes later on, and there is the firewall already
- name: Create the aegir_root user on the remote MySQL
  shell: /usr/bin/mysql -e "GRANT ALL ON *.* TO 'aegir_root'@'%' IDENTIFIED BY '{{ aegir_root_password.stdout }}' WITH GRANT OPTION"
  when: not aegir_root_sql_pass.stat.exists and aegir_db_host != "localhost"
  delegate_to: "{{ aegir_db_host }}"
  tags:
    - aegir-install

- name: Making sure the drush package is removed (aegir3 installs through composer)
  apt: pkg=drush state=absent

- apt: update_cache=yes
  tags:
    - packages

# A bit off topic, but too often had the issue where mailname was misconfigured
# @todo Move to common-all? Also in the php role
- copy: content="{{ inventory_hostname }}" dest=/etc/mailname
- file: path=/etc/mailname owner=root group=root mode=0644

# Has to happen early, used by the hostmaster installation
- name: sudo | Deploy sudoers file for people who are allowed to sudo to aegir
  template: src=etc/sudoers.d/symbiotic-aegir dest=/etc/sudoers.d/symbiotic-aegir owner=root group=root mode=0440
  tags:
    - aegir-sudoers
    - aegir-sudoers-symbiotic
    - aegir-helper-scripts
    - aegir-ansible
    - aegir-install
    - aegir-php

# Also used for the Aegir-on-Backdrop installation
- name: Install Ansible via Debian apt
  apt: name={{ item }} state=present install_recommends=no
  with_items:
    - ansible-core
  tags:
    - packages
    - aegir-ansible

- name: Create aegir user, group, home and Drush directories.
  include_tasks:
    file: git/user.yml
    apply:
      tags: aegir-user
  tags:
    - aegir-user

# Ref.: http://docs.aegirproject.org/en/3.x/install/#41-install-drush
- name: Install legacy Drush for Drupal7 sites
  include_tasks:
    file: git/drush.yml
    apply:
      tags: aegir-install-drush
  tags:
    - aegir-install-drush

- name: Install Bee for Backdrop
  include_tasks:
    file: git/bee.yml
    apply:
      tags: aegir-install-bee
  tags:
    - aegir-install-bee

# Ref.: http://docs.aegirproject.org/en/3.x/install/#322-nginx-configuration
- name: Setup Nginx
  include_tasks:
    file: git/setup-nginx.yml
    apply:
      tags: aegir-nginx
  tags:
    - aegir-nginx

# Ref.: http://docs.aegirproject.org/en/3.x/install/#44-running-hostmaster-install
- name: Install the Aegir front-end
  include_tasks:
    file: git/install.yml
    apply:
      tags: aegir-frontend-install
  tags:
    - aegir-frontend-install

# FIXME? (how to handle Aegir-on-Backdrop upgrades?)
# - name: Upgrade Aegir front-end.
#   include_tasks: git/upgrade.yml

- name: Download drush utf8mb4_convert from Git
  become_user: aegir
  git:
    repo: https://git.drupalcode.org/project/utf8mb4_convert.git
    version: 7.x-1.x
    dest: /var/aegir/.drush/utf8mb4_convert
    update: yes
    force: yes
  tags:
    - aegir-drush-extras
    - aegir-install-drush

- name: Download drush registry_rebuild from Git
  become_user: aegir
  git:
    repo: https://git.drupalcode.org/project/registry_rebuild.git
    version: 7.x-2.x
    dest: /var/aegir/.drush/registry_rebuild
    update: yes
    force: yes
  tags:
    - aegir-drush-extras
    - aegir-install-drush

- name: Install wp-cli
  get_url:
    url: "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest: /usr/local/bin/wp
    mode: '0755'
  tags:
    - aegir-hosting-wordpress

# @todo replace by systemd timer?
- name: Configure dehydrated cron
  cron:
    name="dehydrated"
    minute="35"
    hour="19"
    job="dehydrated -c >/dev/null"
    cron_file="dehydrated"
    user="root"
    state=present
  tags:
    - aegir-hosting-wordpress
    - aegir-hosting-wordpress-dehydrated

# @todo Port to Backdrop?
# - name: Aegir settings | Set CiviCRM default cron interval to 15 mins
#   shell: "drush @hostmaster vset hosting_civicrm_ansible_cron_default_interval 900"
#   become: true
#   become_user: aegir
#   tags:
#     - aegir-settings

- name: Aegir | Enable CiviCRM l10n basedir define
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: 'CIVICRM_L10N_BASEDIR'
    line: "define('CIVICRM_L10N_BASEDIR', '/var/aegir/l10n-civicrm');"
  tags:
    - aegir-globalinc

# deprecated?
- name: Aegir | Set our CiviCRM l10n directory
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: 'global \$civicrm_paths;'
    line: 'global $civicrm_paths;'
  tags:
    - aegir-globalinc

- name: Aegir | Set our CiviCRM l10n directory
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: "\\$civicrm_paths\\['civicrm.l10n'\\]\\['path'\\]"
    line: "$civicrm_paths['civicrm.l10n']['path'] = '/var/aegir/l10n-civicrm';"
    insertafter: 'global \$civicrm_paths;'
  tags:
    - aegir-globalinc

- name: hosting-queued | Deploy hosting-queued unit file
  template:
    src: etc/systemd/system/hosting-queued.service
    dest: /etc/systemd/system/hosting-queued.service
    owner: root
    group: root
    mode: 0444
  notify: reload systemd
  tags:
    - aegir-hosting-queued

- name: hosting-queued | Enable the hosting-queued service
  systemd:
    name: hosting-queued
    enabled: yes
    masked: no
  tags:
    - aegir-hosting-queued

- name: hosting-queued | Restart Aegir hosting queue
  service: name=hosting-queued state=restarted
  tags:
    - aegir-hosting-queued

# Requirements for the wkhtmltox 0.15 package
- apt: name={{ item }} state=absent install_recommends=no
  with_items:
    - fontconfig
    - xfonts-base
    - xfonts-75dpi
  tags:
    - packages
    - aegir
    - aegir-wkhtmltopdf

- name: Install wkhtmltopdf from deb
  apt:
    deb: https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb
  tags:
    - aegir
    - aegir-wkhtmltopdf

# @todo A bit redundant with the new Aegir-on-Backdrop setup
# c.f. https://www.drupal.org/project/hosting_civicrm/issues/2972031
- name: Deploy our version of fix-drupal-site-permissions.sh
  template: src=usr/local/bin/fix-drupal-site-permissions.sh dest=/usr/local/bin/fix-drupal-site-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy our fix-wordpress-permissions.sh
  template: src=usr/local/bin/fix-wordpress-permissions.sh dest=/usr/local/bin/fix-wordpress-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy Aegir helper scripts
  template:
    src: usr/local/bin/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - resync-drupal-db.sh
    - resync-wordpress-db.sh
    - aegir-db-filestats
    - aegir-disk-usage-report
    - aegir-getlock
    - optimize-images
    - cvlog
    - civicrm-pull-patch
    - civicrm-update-translations
  tags:
    - aegir-helper-scripts
    - aegir-civicrm
    - aegir-civicrm-scripts
    - aegir-civicrm-translations
    - aegir-ansible
    - aegir-getlock
    - aegir-weekly

- name: Deploy our version of BOA's weekly.sh
  template: src=usr/local/bin/aegir-weekly.sh dest=/usr/local/bin/aegir-weekly.sh owner=root group=root mode=0755
  tags:
    - aegir-weekly

- name: Setup a cron for our version of BOA's weekly.sh
  cron:
    name="aegir-weekly"
    minute="35"
    hour="18"
    hour="18"
    weekday="6"
    job="/usr/local/bin/aegir-weekly.sh"
    cron_file="aegir-weekly"
    user="root"
    state=present
  tags:
    - aegir-weekly

- name: Aegir | Download CiviCRM translations
  shell: "/usr/local/bin/civicrm-update-translations"
  args:
    creates: /var/aegir/l10n-civicrm
  tags:
    - aegir-civicrm-translations

- include_tasks:
    file: civicrm.yml
    apply:
      tags: aegir-civicrm
  tags:
    - aegir-civicrm

- include_tasks:
    file: nodejs.yml
    apply:
      tags: aegir-nodejs
  tags:
    - aegir-nodejs
    - packages

- include_tasks:
    file: aegir-helpers.yml
    apply:
      tags: aegir-helpers
  tags:
    - aegir-helpers

- name: Aegir | Deploy our local.drushrc.php
  template: src=var/aegir/dot.drush/local.drushrc.php dest=/var/aegir/.drush/local.drushrc.php owner=aegir group=aegir mode=0644
  tags:
    - aegir-install-drush

- name: bash | Deploy bashrc and profile configurations
  template: src=var/aegir/dot{{ item }} dest=/var/aegir/{{ item }} owner=aegir group=aegir mode=0644
  with_items:
    - .bashrc
    - .profile
  tags:
    - aegir-bash

- name: Deploy our duct tape script to safely reload nginx
  template: src=usr/local/bin/aegir-reload-nginx.sh dest=/usr/local/bin/aegir-reload-nginx.sh owner=root group=root mode=0755
  tags:
    - aegir-sudoers

- name: Deploy wrapper for getting systemd timer logs
  template: src=usr/local/bin/aegir-systemctl-status dest=/usr/local/bin/aegir-systemctl-status owner=root group=root mode=0755
  tags:
    - aegir-sudoers
    - aegir-ansible

- include_tasks:
    file: platforms.yml
    apply:
      tags: aegir-civicrm-platforms
  tags:
    - aegir-civicrm-platforms

- include_tasks:
    file: sshfs-keys.yml
    apply:
      tags: aegir-sshfs
  tags:
    - aegir-sshfs

- include_tasks: mysql-users.yml
  vars:
    mysql_users: "{{ aegir_mysql_users_ro }}"
    mysql_privs: "SELECT,SHOW VIEW,PROCESS"
  when: aegir_mysql_users_ro | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-ro

- include_tasks: mysql-users.yml
  vars:
    mysql_users: "{{ aegir_mysql_users_rw }}"
    mysql_privs: "SELECT,SHOW VIEW,PROCESS,INSERT,UPDATE,DELETE,CREATE VIEW,REPLICATION CLIENT"
  when: aegir_mysql_users_rw | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-rw

# @todo Needs fixing
- include_tasks: mysql-replication.yml
  when: aegir_mysql_replication_hosts | length > 0
  tags:
    - aegir-mysql-replication

- include_tasks: cleanuptmp.yml
  tags:
    - aegir-cleanuptmp

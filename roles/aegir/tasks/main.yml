---
# Installs Aegir3 (http://www.aegirproject.org)
# Assumes Debian, with MariaDB, Nginx, php-fpm
# Depends on the mariadb role

- name: aegir | Force gathering facts for partial ansible runs
  setup:
  tags:
    - packages
    - packages-php
    - aegir-php
    - aegir-goaccess
    - aegir-nodejs
    - packages-php-gpg

- apt:
    name: [
      locales, # required for enabling locales, for CiviCRM native gettext
      patch, # required for drush make
      pwgen,
      curl,
      gettext,
      xauth,
      xvfb,
      libxrender1,
      ttf-mscorefonts-installer,
      fonts-dejavu-core,
      imagemagick
    ]
    state: present
    install_recommends: no
  tags:
    - packages

# For when running the SQL server on another VM
- apt:
    name: [
      pwgen
    ]
    state: present
    install_recommends: no
  delegate_to: "{{ aegir_db_host }}"
  when: aegir_db_host != "localhost"
  tags:
    - packages


# Create a aegir_root user for MariaDB (avoids issues with root's empty password)
- name: Check a password was created for the aegir_root MySQL user
  stat: path="/root/.mysql.root"
  register: aegir_root_sql_pass
  tags:
    - aegir-install

- name: Generate a aegir_root password for MySQL
  shell: pwgen 15 1 > /root/.mysql.root
  when: not aegir_root_sql_pass.stat.exists
  tags:
    - aegir-install

- name: Fetch the aegir_root password for MySQL
  command: cat /root/.mysql.root
  register: aegir_root_password
  changed_when: false
  tags:
    - aegir-install

- name: Set a fact for the mysql root password
  set_fact:
    aegir_db_password: "{{ aegir_root_password.stdout }}"
  tags:
    - aegir-install

- name: Create the aegir_root user on the local MySQL
  shell: /usr/bin/mysql -e "GRANT ALL ON *.* TO 'aegir_root'@'localhost' IDENTIFIED BY '{{ aegir_root_password.stdout }}' WITH GRANT OPTION"
  when: not aegir_root_sql_pass.stat.exists and aegir_db_host == "localhost"
  tags:
    - aegir-install

# We use the '%' wildcard instead of inventory_hostname because we should be specifying the IPv6 address
# and it is a bit too much restrictive if we do changes later on, and there is the firewall already
- name: Create the aegir_root user on the remote MySQL
  shell: /usr/bin/mysql -e "GRANT ALL ON *.* TO 'aegir_root'@'%' IDENTIFIED BY '{{ aegir_root_password.stdout }}' WITH GRANT OPTION"
  when: not aegir_root_sql_pass.stat.exists and aegir_db_host != "localhost"
  delegate_to: "{{ aegir_db_host }}"
  tags:
    - aegir-install

- name: Making sure the drush package is removed (aegir3 installs through composer)
  apt: pkg=drush state=absent

- apt: update_cache=yes
  tags:
    - packages

- apt:
    name: "nginx"
    state: present
    install_recommends: no
  when: ("'aegir_apache' not in group_names")
  tags:
    - packages
    - aegir-nginx

# A bit off topic, but too often had the issue where mailname was misconfigured
# @todo Move to common-all? Also in the php role
- copy: content="{{ inventory_hostname }}" dest=/etc/mailname
- file: path=/etc/mailname owner=root group=root mode=0644

- name: Ensure that our locales are enabled
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - ca_ES.UTF-8
    - de_DE.UTF-8
    - en_US.UTF-8
    - en_CA.UTF-8
    - es_ES.UTF-8
    - fr_BE.UTF-8
    - fr_CA.UTF-8
    - fr_FR.UTF-8
    - he_IL.UTF-8
    - hr_HR.UTF-8
    - it_IT.UTF-8
    - nl_NL.UTF-8
    - pl_PL.UTF-8
    - pt_BR.UTF-8
    - pt_PT.UTF-8
    - sk_SK.UTF-8
    - sq_AL.UTF-8
  tags:
    - aegir
    - aegir-locales

# Has to happen early, used by the hostmaster installation
- name: sudo | Deploy sudoers file for people who are allowed to sudo to aegir
  template: src=etc/sudoers.d/symbiotic-aegir dest=/etc/sudoers.d/symbiotic-aegir owner=root group=root mode=0440
  tags:
    - aegir-sudoers
    - aegir-sudoers-symbiotic
    - aegir-helper-scripts
    - aegir-ansible
    - aegir-install
    - aegir-goaccess
    - aegir-php

- name: Install Aegir using git
  include: git.yml
  tags:
    - aegir-install

- name: Download provision_symbiotic from Github
  become_user: aegir
  git: repo=https://github.com/coopsymbiotic/provision_symbiotic.git
       version=master
       dest=/var/aegir/.drush/provision_symbiotic
       update=yes
  tags:
    - aegir-provision-symbiotic
    - aegir-weekly

- name: Download provision_customhtaccess from Github
  become_user: aegir
  git: repo=https://github.com/mlutfy/provision_customhtaccess.git
       version=master
       dest=/var/aegir/.drush/provision_customhtaccess
       update=yes
  tags:
    - aegir-provision-customhtaccess

- name: Download drush utf8mb4_convert from Git
  become_user: aegir
  git:
    repo: https://git.drupalcode.org/project/utf8mb4_convert.git
    version: 7.x-1.x
    dest: /var/aegir/.drush/utf8mb4_convert
    update: yes
  tags:
    - aegir-drush-extras

- name: Download drush registry_rebuild from Git
  become_user: aegir
  git:
    repo: https://git.drupalcode.org/project/registry_rebuild.git
    version: 7.x-2.x
    dest: /var/aegir/.drush/registry_rebuild
    update: yes
  tags:
    - aegir-drush-extras

##
## Update hosting_civicrm from git
##
- name: Get Hostmaster root directory
  become: true
  become_user: aegir
  shell: "drush @hostmaster status | grep 'Drupal root' | awk '{ print $4 }'"
  register: hostmaster_root
  tags:
    - aegir-civicrm-platform
    - aegir-hosting-civicrm
    - aegir-hosting-https
    - aegir-hosting-usage
    - aegir-hosting-wordpress
    - aegir-hosting-advanced-cron
    - aegir-fixownership
    - aegir-goaccess

# Unless we check if it's already a git repo, in most cases it's static
# since it has been updated by the aegir3 debian packages.
- name: Delete the old hosting_civicrm directory
  file: path="{{ aegir_root }}/hostmaster/profiles/hostmaster/modules/aegir/hosting_civicrm" state=absent
  tags:
    - aegir-hosting-civicrm

- name: Deploy latest hosting_civicrm from Git
  become: true
  become_user: aegir
  git: repo=https://git.drupal.org/project/hosting_civicrm.git
       version=7.x-3.x
       dest="{{ aegir_root }}/hostmaster/profiles/hostmaster/modules/aegir/hosting_civicrm"
       update=yes
       force=yes
  ignore_errors: yes
  tags:
    - aegir-hosting-civicrm

- name: Flush Hostmaster cache
  become: true
  become_user: aegir
  shell: "drush @hostmaster cc all"
  tags:
    - aegir-hosting-civicrm

##
## Deploy hosting_wordpress
##
- name: Deploy latest hosting_wordpress from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/mlutfy/hosting_wordpress.git
       version=7.x-3.x
       dest="{{ aegir_root }}/hostmaster/sites/{{ inventory_hostname }}/modules/hosting_wordpress"
       update=yes
  ignore_errors: yes
  tags:
    - aegir-hosting-wordpress

- name: Install wp-cli
  get_url:
    url: "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest: /usr/local/bin/wp
    mode: '0755'
  tags:
    - aegir-hosting-wordpress

# @todo replace by systemd timer?
# @todo Avoid running if the config-wp file does not exist?
- name: hosting_wordpress | Configure dehydrated cron
  cron:
    name="dehydrated-aegir-wp"
    minute="35"
    hour="19"
    job="/var/aegir/config/letsencrypt/script -c -f /var/aegir/config/letsencrypt/config-wp >/dev/null"
    cron_file="dehydrated-aegir-wp"
    user="aegir"
    state=present
  tags:
    - aegir-hosting-wordpress
    - aegir-hosting-wordpress-dehydrated

##
## Deploy hosting_civicrm_ansible and dependencies
##
- name: Deploy latest hosting_civicrm_ansible from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/coopsymbiotic/hosting_civicrm_ansible.git
       version=master
       dest="{{ aegir_root }}/hostmaster/sites/{{ inventory_hostname }}/modules/hosting_civicrm_ansible"
       update=yes
  ignore_errors: yes
  when: "'aegir_backdrop' not in group_names"
  tags:
    - aegir-hosting-civicrm-ansible
    - aegir-hosting-civicrm
    - aegir-ansible

- name: Deploy latest aegir_ansible from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/coopsymbiotic/aegir_ansible.git
       version=main
       dest="{{ aegir_root }}/hostmaster/sites/{{ inventory_hostname }}/modules/aegir_ansible"
       update=yes
  ignore_errors: yes
  when: "'aegir_backdrop' not in group_names"
  tags:
    - aegir-hosting-civicrm-ansible
    - aegir-hosting-civicrm
    - aegir-ansible

# This is perhaps a bit weird and overkill, but for now everything is in the
# same Ansible repo. We should probably have a cron to auto-update?
- name: Deploy latest coopsymbiotic Ansible playbooks from Git
  git: repo=https://github.com/coopsymbiotic/coopsymbiotic-ansible.git
       version=master
       dest="/usr/local/coopsymbiotic-ansible"
       update=yes
       force=yes
  ignore_errors: yes
  tags:
    - aegir-hosting-civicrm-ansible
    - aegir-hosting-civicrm
    - aegir-ansible
    - aegir-ansible-symlink

- name: Install Ansible via Debian apt
  apt: name={{ item }} state=present install_recommends=no
  with_items:
    - ansible-core
  tags:
    - packages
    - aegir-ansible

- stat:
    path: /usr/local/coopsymbiotic-ansible/bin/aegir-ansible
  register: aegir_ansible_link
  tags:
    - aegir-ansible
    - aegir-hosting-civicrm

- name: Delete the old aegir-ansible script
  file:
    path: /usr/local/bin/aegir-ansible
    state: absent
  when: aegir_ansible_link.stat.isreg is defined and aegir_ansible_link.stat.isreg
  tags:
    - aegir-ansible
    - aegir-hosting-civicrm

- name: Symlink the aegir-ansible script
  file:
    src: /usr/local/coopsymbiotic-ansible/bin/aegir-ansible
    dest: /usr/local/bin/aegir-ansible
    state: link
  tags:
    - aegir-ansible
    - aegir-hosting-civicrm

##
## Deploy hosting_usage
##
- name: Deploy latest hosting_usage from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/coopsymbiotic/hosting_usage.git
       version=master
       dest="{{ aegir_root }}/hostmaster/sites/{{ inventory_hostname }}/modules/hosting_usage"
       update=yes
  ignore_errors: yes
  when: "'aegir_backdrop' not in group_names"
  tags:
    - aegir-hosting-usage
    - aegir-goaccess

##
## Deploy hosting_advanced_cron
##
- name: Deploy hosting_advanced_cron from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/coopsymbiotic/hosting_advanced_cron.git
       version=7.x-3.x-stic
       dest="{{ aegir_root }}/hostmaster/sites/{{ inventory_hostname }}/modules/hosting_advanced_cron"
       update=yes
       force=yes
  ignore_errors: yes
  when: "'aegir_backdrop' not in group_names"
  tags:
    - aegir-hosting-advanced-cron
    - aegir-hosting-advanced-cron-update

- name: Enable hosting_advanced_cron
  shell: "drush @hostmaster en hosting_advanced_cron -y"
  async: 60
  poll: 5
  become: true
  become_user: aegir
  when: "'aegir_backdrop' not in group_names"
  tags:
    - aegir-hosting-advanced-cron

# - name: Set default 24h interval for hostmaster
#   shell: "echo 'insert into hosting_advanced_cron (nid, cron_interval) values (10, 86400)' | drush @hm sqlc"
#   become: true
#   become_user: aegir
#   tags:
#     - aegir-hosting-advanced-cron

##
## Required so that our ansible scripts can access the server's site inventory
# @todo Remove hardcoded IPs
##
- name: Aegir | Add our IPs to system allowlist
  shell: "drush @hm vset provision_symbiotic_system_whitelist '{{ aegir_provision_symbiotic_system_whitelist }}'"
  become: true
  become_user: aegir
  tags:
    - aegir-ansible
    - aegir-ansible-whitelist

- name: Aegir | Trigger a hostmaster verify so that the vhost is updated
  shell: "drush @hm provision-verify"
  become: true
  become_user: aegir
  tags:
    - aegir-ansible
    - aegir-ansible-whitelist

##
## Configurations
##
# This command sometimes freezes the ansible run, so we async to wait for 60 seconds, poll every 5 seconds
- name: Aegir modules | Enable a few extra Aegir modules
  shell: "drush @hostmaster en hosting_queued hosting_https hosting_letsencrypt hosting_alias hosting_clone hosting_remote_import hosting_civicrm aegir_ansible_inventory hosting_civicrm_ansible hosting_wpsite hosting_advanced_cron -y"
  async: 60
  poll: 5
  become: true
  become_user: aegir
  tags:
    - aegir-hosting-https
    - aegir-hosting-civicrm
    - aegir-hosting-civicrm-ansible
    - aegir-hosting-wordpress
    - aegir-ansible

- name: Aegir modules | Enable hosting_nginx_https
  shell: "drush @hostmaster en hosting_nginx_https -y"
  async: 60
  poll: 5
  become: true
  become_user: aegir
  when: "'aegir_apache' not in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir modules | Enable hosting_apache_https
  shell: "drush @hostmaster en hosting_apache_https -y"
  async: 60
  poll: 5
  become: true
  become_user: aegir
  when: "'aegir_apache' in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir settings | Enable Aegir queue process
  shell: "drush @hostmaster vset hosting_feature_queued 1"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Set CiviCRM default cron interval to 15 mins
  shell: "drush @hostmaster vset hosting_civicrm_ansible_cron_default_interval 900"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Misc other settings
  become: true
  become_user: aegir
  shell: "drush @hostmaster vset {{ item.name }} {{ item.value }}"
  with_items:
    - { name: 'hosting_feature_http_basic_auth', value: '1' }
    - { name: 'hosting_feature_migrate', value: '1' }
    - { name: 'hosting_feature_remote_import', value: '1' }
    - { name: 'hosting_feature_fix_ownership', value: '1' }
    - { name: 'hosting_feature_sync', value: '1' }
    - { name: 'hosting_feature_tasks_extra', value: '1' }
    - { name: 'hosting_feature_task_gc', value: '1' }
    - { name: 'hosting_feature_fix_ownership', value: '1' }
    - { name: 'hosting_feature_fix_permissions', value: '1' }
  tags:
    - aegir-settings
    - aegir-fixownership

- name: Aegir settings | Delete a few settings
  become: true
  become_user: aegir
  shell: "drush @hostmaster vdel {{ item }} -y"
  with_items:
    - update_notify_emails

- name: Aegir | Enable CiviCRM l10n basedir define
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: 'CIVICRM_L10N_BASEDIR'
    line: "define('CIVICRM_L10N_BASEDIR', '/var/aegir/l10n-civicrm');"
  tags:
    - aegir-globalinc

# deprecated?
- name: Aegir | Set our CiviCRM l10n directory
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: 'global \$civicrm_paths;'
    line: 'global $civicrm_paths;'
  tags:
    - aegir-globalinc

- name: Aegir | Set our CiviCRM l10n directory
  lineinfile:
    path: /var/aegir/config/includes/global.inc
    regexp: "\\$civicrm_paths\\['civicrm.l10n'\\]\\['path'\\]"
    line: "$civicrm_paths['civicrm.l10n']['path'] = '/var/aegir/l10n-civicrm';"
    insertafter: 'global \$civicrm_paths;'
  tags:
    - aegir-globalinc

- name: hosting-queued | Deploy hosting-queued unit file
  template:
    src: etc/systemd/system/hosting-queued.service
    dest: /etc/systemd/system/hosting-queued.service
    owner: root
    group: root
    mode: 0444
  notify: reload systemd
  tags:
    - aegir-hosting-queued

- name: hosting-queued | Enable the hosting-queued service
  systemd:
    name: hosting-queued
    enabled: yes
    masked: no
  tags:
    - aegir-hosting-queued

- name: hosting-queued | Restart Aegir hosting queue
  service: name=hosting-queued state=restarted
  tags:
    - aegir-hosting-queued

# Requirements for the wkhtmltox 0.15 package
- apt: name={{ item }} state=absent install_recommends=no
  with_items:
    - fontconfig
    - xfonts-base
    - xfonts-75dpi
  tags:
    - packages
    - aegir
    - aegir-wkhtmltopdf

- name: Install wkhtmltopdf from deb
  apt:
    deb: https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb
  tags:
    - aegir
    - aegir-wkhtmltopdf

#
# c.f. https://www.drupal.org/project/hosting_civicrm/issues/2972031
#
- name: Deploy our version of fix-drupal-site-permissions.sh
  template: src=usr/local/bin/fix-drupal-site-permissions.sh dest=/usr/local/bin/fix-drupal-site-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy our fix-wordpress-permissions.sh
  template: src=usr/local/bin/fix-wordpress-permissions.sh dest=/usr/local/bin/fix-wordpress-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy Aegir helper scripts
  template:
    src: usr/local/bin/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - resync-drupal-db.sh
    - resync-wordpress-db.sh
    - aegir-db-filestats
    - aegir-disk-usage-report
    - aegir-getlock
    - optimize-images
    - cvlog
    - civicrm-pull-patch
    - civicrm-update-translations
  tags:
    - aegir-helper-scripts
    - aegir-civicrm-scripts
    - aegir-civicrm-translations
    - aegir-ansible
    - aegir-getlock

- name: Deploy our version of BOA's weekly.sh
  template: src=usr/local/bin/aegir-weekly.sh dest=/usr/local/bin/aegir-weekly.sh owner=root group=root mode=0755
  tags:
    - aegir-weekly

- name: Setup a cron for our version of BOA's weekly.sh
  cron:
    name="aegir-weekly"
    minute="35"
    hour="18"
    hour="18"
    weekday="6"
    job="/usr/local/bin/aegir-weekly.sh"
    cron_file="aegir-weekly"
    user="root"
    state=present
  tags:
    - aegir-weekly

- name: Aegir | Download CiviCRM translations
  shell: "/usr/local/bin/civicrm-update-translations"
  args:
    creates: /var/aegir/l10n-civicrm
  tags:
    - aegir-civicrm-translations

- include: civicrm.yml
  tags:
    - aegir-civicrm

- include: nodejs.yml
  tags:
    - aegir-nodejs
    - packages

- include: aegir-helpers.yml
  tags:
    - aegir-helpers

- name: Aegir | Deploy our local.drushrc.php
  template: src=var/aegir/dot.drush/local.drushrc.php dest=/var/aegir/.drush/local.drushrc.php owner=aegir group=aegir mode=0644
  tags:
    - aegir-drush

- name: bash | Deploy bashrc and profile configurations
  template: src=var/aegir/dot{{ item }} dest=/var/aegir/{{ item }} owner=aegir group=aegir mode=0644
  with_items:
    - .bashrc
    - .profile
  tags:
    - aegir-bash

- name: Deploy our duct tape script to safely reload nginx
  template: src=usr/local/bin/aegir-reload-nginx.sh dest=/usr/local/bin/aegir-reload-nginx.sh owner=root group=root mode=0755
  tags:
    - aegir-sudoers

- name: Deploy wrapper for getting systemd timer logs
  template: src=usr/local/bin/aegir-systemctl-status dest=/usr/local/bin/aegir-systemctl-status owner=root group=root mode=0755
  tags:
    - aegir-sudoers
    - aegir-ansible

- include: platforms.yml
  tags:
    - aegir-civicrm-platforms

- include: sshfs-keys.yml
  tags:
    - aegir-sshfs

- include: mysql-users.yml mysql_users="{{ aegir_mysql_users_ro }}" mysql_privs="SELECT,SHOW VIEW,PROCESS"
  when: aegir_mysql_users_ro | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-ro

- include: mysql-users.yml mysql_users="{{ aegir_mysql_users_rw }}" mysql_privs="SELECT,SHOW VIEW,PROCESS,INSERT,UPDATE,DELETE,CREATE VIEW,REPLICATION CLIENT"
  when: aegir_mysql_users_rw | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-rw

# @todo Needs fixing
- include: mysql-replication.yml
  when: aegir_mysql_replication_hosts | length > 0
  tags:
    - aegir-mysql-replication

- include: cleanuptmp.yml
  tags:
    - aegir-cleanuptmp

- include: cron-extra.yml
  tags:
    - aegir-cron-extra

- include: goaccess.yml
  tags:
    - aegir-goaccess
